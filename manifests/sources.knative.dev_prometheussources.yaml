---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  name: prometheussources.sources.knative.dev
spec:
  group: sources.knative.dev
  names:
    kind: PrometheusSource
    listKind: PrometheusSourceList
    plural: prometheussources
    singular: prometheussource
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PrometheusSource is the Schema for the prometheussources API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: PrometheusSourceSpec defines the desired state of PrometheusSource
            properties:
              authTokenFile:
                description: The name of the file containing the authenication token
                type: string
              caCertConfigMap:
                description: |-
                  The name of the config map containing the CA certificate of the
                  Prometheus service's signer.
                type: string
              promQL:
                description: PromQL is the Prometheus query for this source
                type: string
              schedule:
                description: A crontab-formatted schedule for running the PromQL query
                type: string
              serverURL:
                description: ServerURL is the URL of the Prometheus server
                type: string
              serviceAccountName:
                description: |-
                  ServiceAccountName holds the name of the Kubernetes service account
                  as which the underlying K8s resources should be run. If unspecified
                  this will default to the "default" service account for the namespace
                  in which the PrometheusSource exists.
                type: string
              sink:
                description: |-
                  Sink is a reference to an object that will resolve to a host
                  name to use as the sink.
                properties:
                  ref:
                    description: Ref points to an Addressable.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      group:
                        description: |-
                          Group of the API, without the version of the group. This can be used as an alternative to the APIVersion, and then resolved using ResolveGroup.
                          Note: This API is EXPERIMENTAL and might break anytime. For more details: https://github.com/knative/eventing/issues/5086
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          This is optional field, it gets defaulted to the object holding it if left out.
                        type: string
                    required:
                    - kind
                    - name
                    type: object
                  uri:
                    description: URI can be an absolute URL(non-empty scheme and non-empty
                      host) pointing to the target or a relative URI. Relative URIs
                      will be resolved using the base URI retrieved from Ref.
                    type: object
                type: object
              step:
                description: |-
                  Query resolution step width in duration format or float number of seconds.
                  Prometheus duration strings are of the form [0-9]+[smhdwy].
                type: string
            required:
            - promQL
            - schedule
            - serverURL
            type: object
          status:
            description: PrometheusSourceStatus defines the observed state of PrometheusSource
            properties:
              annotations:
                additionalProperties:
                  type: string
                description: |-
                  Annotations is additional Status fields for the Resource to save some
                  additional State as well as convey more information to the user. This is
                  roughly akin to Annotations on any k8s resource, just the reconciler conveying
                  richer information outwards.
                type: object
              ceAttributes:
                description: |-
                  CloudEventAttributes are the specific attributes that the Source uses
                  as part of its CloudEvents.
                items:
                  description: |-
                    CloudEventAttributes specifies the attributes that a Source
                    uses as part of its CloudEvents.
                  properties:
                    source:
                      description: Source is the CloudEvents source attribute.
                      type: string
                    type:
                      description: Type refers to the CloudEvent type attribute.
                      type: string
                  type: object
                type: array
              conditions:
                description: Conditions the latest available observations of a resource's
                  current state.
                items:
                  description: |-
                    Condition defines a readiness condition for a Knative resource.
                    See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time the condition transitioned from one status to another.
                        We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic
                        differences (all other things held constant).
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    severity:
                      description: |-
                        Severity with which to treat failures of this type of condition.
                        When this is not specified, it defaults to Error.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: |-
                  ObservedGeneration is the 'Generation' of the Service that
                  was last processed by the controller.
                format: int64
                type: integer
              sinkUri:
                description: |-
                  SinkURI is the current active sink URI that has been configured for the
                  Source.
                type: object
            type: object
        type: object
    served: true
    storage: true
